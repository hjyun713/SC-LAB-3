<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Dialog</class>
 <widget class="QDialog" name="Dialog">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1028</width>
    <height>699</height>
   </rect>
  </property>
  <property name="font">
   <font>
    <family>Arial</family>
    <pointsize>11</pointsize>
   </font>
  </property>
  <property name="windowTitle">
   <string>About Program</string>
  </property>
  <property name="locale">
   <locale language="English" country="UnitedStates"/>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="0" column="0">
    <widget class="QSplitter" name="splitter_2">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <widget class="QPlainTextEdit" name="plainTextEdit">
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>11</pointsize>
       </font>
      </property>
      <property name="locale">
       <locale language="Korean" country="SouthKorea"/>
      </property>
      <property name="plainText">
       <string>
Introducing our groundbreaking software, designed to revolutionize facial symmetry analysis through advanced numerical analysis of Facial Palsy. With a focus on both still images and videos, our program offers a comprehensive multi-faceted analysis. Users can now compare and assess symmetry before and after surgical procedures or rehabilitation sessions.

For still images, our software utilizes the Distance Symmetry Score (DSS) and Angle Symmetry Score (ASS) to provide precise analysis. These metrics enable an accurate evaluation of facial symmetry. In the case of videos, our program goes a step further by analyzing the Motion Symmetry Score (MSS), providing valuable insights into dynamic facial movements.

With our innovative software, healthcare professionals, researchers, and patients can gain a deeper understanding of facial symmetry, track progress over time, and make informed decisions regarding treatment and rehabilitation options. Discover the power of our facial symmetry analysis software today and unlock new possibilities in the field of Facial Palsy research and patient care.


Development Environment:
   - OS: Windows 11 Pro for Workstations
   - CPU: AMD Ryzen 7 5800X 8-Core Processor
   - RAM: 64 GB
   - GPU: NVIDIA GeForce RTX 3090

Licenses:

Our software is released under the GPL v3 (GNU General Public License, version 3) and the Apache License 2.0. Here are the corresponding statements:

1. GPL v3 License:
   The software follows the GNU General Public License, version 3 (GPL v3). This license is a free software license that grants rights to copy, distribute, modify, and use the software. If you choose to use this software under the terms of the GPL v3, you must comply with the conditions stated in the license. The full text of the GPL v3 license can be found on the GNU website.

2. Apache License 2.0:
   The software is licensed under the Apache License, version 2.0. This license is an open-source license that grants rights for both commercial and non-commercial use. If you choose to use this software under the terms of the Apache License 2.0, you must comply with the conditions stated in the license. The full text of the Apache License 2.0 can be found on the Apache Software Foundation (ASF) website.

Therefore, the use, reproduction, distribution, and modification of this software should adhere to the provisions of both the GPL v3 and Apache License 2.0. This allows for the freedom to use and improve the software.</string>
      </property>
      <property name="textInteractionFlags">
       <set>Qt::NoTextInteraction</set>
      </property>
     </widget>
     <widget class="QSplitter" name="splitter">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <widget class="QLabel" name="label">
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QPushButton" name="ok_btn">
       <property name="maximumSize">
        <size>
         <width>150</width>
         <height>30</height>
        </size>
       </property>
       <property name="text">
        <string>OK</string>
       </property>
      </widget>
     </widget>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
